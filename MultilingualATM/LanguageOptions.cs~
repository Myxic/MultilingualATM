using System;
using System.ComponentModel;
using static MultilingualATM.AtmOpearation;

namespace MultilingualATM
{


    internal class AtmOpearation
    {
        private Dictionary<UserInterface, int> Amount;
        readonly UserInterface IUser1 = new IUser1();
        readonly UserInterface IUser2 = new IUser2();
        readonly UserInterface IUser3 = new IUser3();

        public AtmOpearation()
        {
 
            Amount = new Dictionary<UserInterface, int>
            {   {IUser1, 2000},
                {IUser2, 10000},
                {IUser3, 3000}       
            };
        }
        public interface UserInterface
        {
            void Balance();
            void Withdraw();
            void Transfer();
        }

        private static void LanguageOptions(int num)
        {
            switch (num)
            {
                case 1:
                    Console.Beep(12, 1);
                    break;
                case 2:
                    Console.Beep(345, 1000);
                    break;
                case 3:
                    Console.Beep(1234, 2000);
                    break;
                default:
                    break;
            }
          


        }
       
        private static decimal Balance()
        {
            return 
        }
        private static decimal Withdrawal(decimal withdraw)
        {
            if (withdraw < Balance())
            {

            }
            return Balance();
        }
        private static decimal Transfer(decimal transfer)
        {
            if (transfer < Balance()) {  

            }
            return Balance();
        }
        
        private static void English()
        {

        }
        private static void Russian()
        {

        }
        private static void Chinese()
        {

        }
    }


    public class IUser1 : UserInterface
    {
        public void Withdraw()
        {
            throw new NotImplementedException();
        }

        public void Balance()
        {
            throw new NotImplementedException();
        }

        public void Transfer()
        {
            throw new NotImplementedException();
        }
    }
    public class IUser2 : UserInterface
    {
        public void Withdraw()
        {
            throw new NotImplementedException();
        }

        public void Balance()
        {
            throw new NotImplementedException();
        }

        public void Transfer()
        {
            throw new NotImplementedException();
        }
    }
    public class IUser3 : UserInterface
    {
        public void Withdraw()
        {
            throw new NotImplementedException();
        }

        public void Balance()
        {
            throw new NotImplementedException();
        }

        public void Transfer()
        {
            throw new NotImplementedException();
        }
    }
}




